name: Build and Publish to NPM
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build on ${{ matrix.os }} for Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build
      - run: npm test
      - name: Get platform info
        id: platform
        run: |
          echo "platform=${{ runner.os == 'Windows' && 'win32' || runner.os == 'macOS' && 'darwin' || 'linux' }}" >> $GITHUB_OUTPUT
          echo "arch=${{ runner.arch }}" >> $GITHUB_OUTPUT
      - name: Get Node ABI
        id: node-abi
        run: echo "abi=$(node -p "process.versions.modules")" >> $GITHUB_OUTPUT
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: node-zipper-${{ matrix.os }}-node${{ matrix.node-version }}
          path: ./lib/binding/Release/node-${{ steps.node-abi.outputs.abi }}-${{ steps.platform.outputs.platform }}-${{ steps.platform.outputs.arch }}/node-zipper.node
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      - name: List artifacts
        run: ls -R ./artifacts
      - name: Prepare binaries
        run: |
          mkdir -p ./lib/binding/Release
          find ./artifacts -type f -name 'node-zipper.node' -exec cp --parents {} ./lib/binding/Release/ \;
      - name: List prepared binaries
        run: ls -R ./lib/binding
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
